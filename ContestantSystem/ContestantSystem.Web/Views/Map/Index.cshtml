
@{
    ViewBag.Title = "Index";
}

<style>
    /*html, body {
            height: 100%;
            margin: 0;
        }*/

    #map {
        width: 1200px;
        height: 470px;
    }
</style>


<link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
      integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
      crossorigin="" />
<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
        integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
        crossorigin=""></script>


<h2>Map Index</h2>




<div id='map'></div>




<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-keyboard="false" data-backdrop="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">...</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>



@section Scripts{

    <script src="~/Media/district.js" type="text/javascript"></script>
    <script src="~/Media/mask.js" type="text/javascript"></script>

    <script type="text/javascript">

        //Load List




        var map = L.map('map').setView([28.3949, 84.1240], 7);

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
            maxZoom: 18,
            attribution: '<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',
            id: 'mapbox.light'
        }).addTo(map);





        //====================================================

        let ContestantList = @Html.Raw(Json.Encode(ViewBag.ContestantList));

        var AllDistrictMapList = nepalData.features.map(x => { x.properties.ContestantIDs = []; return x.properties; });

        for (let index = 0; index < ContestantList.length; index++) {

           var ContestantDistName = ContestantList[index].District.Name;
            var obj = AllDistrictMapList.find(x => x.name.toLowerCase() == ContestantDistName.toLowerCase());

            if (obj != null)
            obj.ContestantIDs.push(ContestantList[index].Id);
        }



          function getColor(d) {
                return d > 10 ? '#9e0000' :
                    d > 5  ? '#ff6666' :
                    d > 4  ? '#4f9e00' :
                    d > 3  ? '#a6ff4d' :
                    d > 2   ? '#004f9e' :
                    d > 1   ? '#4da6ff' :
                    d > 0   ? '#ff33ff' :
                                '#FFEDA0';
            }

          function style(feature) {
               
                    return {
                        fillColor: getColor(feature.properties.ContestantIDs.length),
                        weight: 2,
                        opacity: 1,
                        color: 'white',
                        dashArray: '2',
                        fillOpacity: 0.7
                    };
        }

          function markerOnClick(e) {

                    // var DistId = e.propagatedFrom.feature.properties;
                    // var ContestantArr = e.propagatedFrom.feature.properties.ContestantIDs;
                    // console.log( e.propagatedFrom.feature.properties);

                   var data = ContestantList.filter(x=>x.District.Name.toLowerCase()==e.propagatedFrom.feature.properties.name.toLowerCase())

                    if(data!=null)
                    {
                        if(data.length>0)
                        {

                            var htm = RenderContestantList(data);

                            $(".modal-body").html(htm);
                            $(".modal-header").html(e.propagatedFrom.feature.properties.name.toUpperCase());

                            $('#myModal').modal('show');

                            return;
                        }

                    }
                    return false;

                    }

          function RenderContestantList(list) {

                    var htm=`<div><h3>Contestant's List </h3></div> <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr> <th>SN#</th> <th>Full Name</th>
                                             <th>Photo</th> <th>Gender</th>
                                              <th>District</th> </tr>
                                    </thead> <tbody>`;
                    let i =0;
                    htm += list.map(x=>{
                        i=i+1;
                        return `<tr> <th scope="row">${i}</th>
                            <td> ${x.Firstname +' '+ x.Lastname}  </td>
                            <td> <img src="${x.PhotoUrl}" width="80" />  </td>
                            <td> ${x.Gender}  </td>

                            <td> ${x.District.Name}  </td>

                                </tr>`;

                      });


                    htm +=`</tbody></table>
                        </div>`;

                        return htm;
                }


          L.geoJSON(nepalData,{style: style}).addTo(map).on('click', markerOnClick);
          L.geoJSON(maskdata).addTo(map);






    </script>

}