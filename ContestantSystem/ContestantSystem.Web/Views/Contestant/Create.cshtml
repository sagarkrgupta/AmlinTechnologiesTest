@model ContestantSystem.Web.ViewModel.Contestant_VM
@{
    ViewBag.Title = "Create";
}
<link href="~/Plugin/datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

@using (Html.BeginForm("Create","Contestant",FormMethod.Post,new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id);
   


    <div class="form-horizontal">
        <fieldset>
            <legend class="form_legend">Enter Contestant </legend>
            <div>



                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Firstname, "First Name", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lastname, "Last Name", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.DateOfBirth, "Date of Birth", htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-3">
                        <div class='input-group' id='datetimepicker1'>
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.IsActive, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.DistrictId, ViewBag.DistrictDDL as IEnumerable<SelectListItem>, "Select District", new { @class = "form-control selectpicker", @title = "Select District" })
                    @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })

                </div>


                <div class="form-group">

                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })

                    <div class="col-md-12">
                        Male
                        @Html.RadioButtonFor(model => model.Gender, "Male")
                        Female
                        @Html.RadioButtonFor(model => model.Gender, "Female")
                    </div>

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.PhotoUrl, "Photo Upload", htmlAttributes: new { @class = "control-label" })
                    @*@Html.EditorFor(model => model.PhotoFile,  new { htmlAttributes = new { @class = "form-control", @type = "file" } })*@
                    <input type="file" name="PhotoFile"  value="" />
                    @Html.ValidationMessageFor(model => model.PhotoUrl, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">

                    <img src="@Model.PhotoUrl" alt="@Model.PhotoUrl" width="80" />

                </div>


                <div class="form-group">

                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @placeholder = "Enter Address", width = "8" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                </div>








            </div>
        </fieldset>
        <button type="submit" class="btn btn-default">Submit</button>
        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-warning" })

    </div>


}

@section Scripts{
    <script src="~/Plugin/MomentJS/moment.min.js"></script>
    <script src="~/Plugin/datetimepicker/js/bootstrap-datetimepicker.min.js"></script>


    <script type="text/javascript">
        $(document).ready(function () {

            $('#datetimepicker1').datetimepicker({
                format: 'MM/DD/YYYY',
                maxDate: new Date(),
                //  defaultDate: GetdateOfDayAfterTommorow(),

            });

            //function for getting date after two days
            function GetdateOfDayAfterTommorow() {
                var someDate = new Date();
                var numberOfDaysToAdd = 2; //value adds days as required
                someDate.setDate(someDate.getDate() + numberOfDaysToAdd);
                return someDate;
            };

        });
    </script>

}
